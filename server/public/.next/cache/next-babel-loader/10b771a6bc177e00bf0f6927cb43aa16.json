{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/longjiuwei/html,css,js/xiaogao_blog/web/pages/_app.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport '../styles/globals.css';\nimport NProgress from 'nprogress';\n\nfunction MyApp({\n  Component,\n  pageProps\n}) {\n  const router = useRouter(); // const [loading, setLoading] = useState<boolean>(false)\n\n  useEffect(() => {\n    const handleRouteStartChange = url => {\n      NProgress.start(); // setLoading(true)\n    };\n\n    const handleRouterEndChange = url => {\n      NProgress.done(); // setLoading(false)\n    };\n\n    router.events.on('routeChangeStart', handleRouteStartChange);\n    router.events.on('routeChangeComplete', handleRouterEndChange);\n    return () => {\n      router.events.off('routeChangeStart', handleRouteStartChange);\n      router.events.off('routeChangeComplete', handleRouterEndChange);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\nexport default MyApp;","map":{"version":3,"sources":["/Users/longjiuwei/html,css,js/xiaogao_blog/web/pages/_app.tsx"],"names":["React","useEffect","useRouter","NProgress","MyApp","Component","pageProps","router","handleRouteStartChange","url","start","handleRouterEndChange","done","events","on","off"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAO,uBAAP;AAEA,OAAOC,SAAP,MAAsB,WAAtB;;AACA,SAASC,KAAT,CAAe;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAf,EAAyC;AAErC,QAAMC,MAAM,GAAGL,SAAS,EAAxB,CAFqC,CAIrC;;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMO,sBAAsB,GAAIC,GAAD,IAAS;AACpCN,MAAAA,SAAS,CAACO,KAAV,GADoC,CAEpC;AACH,KAHD;;AAIA,UAAMC,qBAAqB,GAAIF,GAAD,IAAS;AACnCN,MAAAA,SAAS,CAACS,IAAV,GADmC,CAEnC;AACH,KAHD;;AAKAL,IAAAA,MAAM,CAACM,MAAP,CAAcC,EAAd,CAAiB,kBAAjB,EAAqCN,sBAArC;AACAD,IAAAA,MAAM,CAACM,MAAP,CAAcC,EAAd,CAAiB,qBAAjB,EAAwCH,qBAAxC;AAEA,WAAO,MAAM;AACTJ,MAAAA,MAAM,CAACM,MAAP,CAAcE,GAAd,CAAkB,kBAAlB,EAAsCP,sBAAtC;AACAD,MAAAA,MAAM,CAACM,MAAP,CAAcE,GAAd,CAAkB,qBAAlB,EAAyCJ,qBAAzC;AACH,KAHD;AAIH,GAjBQ,EAiBN,EAjBM,CAAT;AAmBA,sBAAO;AAAA,2BAEH,QAAC,SAAD,oBAAeL,SAAf;AAAA;AAAA;AAAA;AAAA;AAFG,mBAAP;AAIH;;AAED,eAAeF,KAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useRouter } from 'next/router'\nimport '../styles/globals.css'\nimport Loading from '../components/loadingUrl'\nimport NProgress from 'nprogress'\nfunction MyApp({ Component, pageProps }) {\n\n    const router = useRouter()\n\n    // const [loading, setLoading] = useState<boolean>(false)\n\n    useEffect(() => {\n        const handleRouteStartChange = (url) => {\n            NProgress.start()\n            // setLoading(true)\n        }\n        const handleRouterEndChange = (url) => {\n            NProgress.done()\n            // setLoading(false)\n        }\n\n        router.events.on('routeChangeStart', handleRouteStartChange)\n        router.events.on('routeChangeComplete', handleRouterEndChange)\n\n        return () => {\n            router.events.off('routeChangeStart', handleRouteStartChange)\n            router.events.off('routeChangeComplete', handleRouterEndChange)\n        }\n    }, [])\n\n    return <>\n        {/* {loading ? <Loading /> : null} */}\n        <Component {...pageProps} />\n    </>\n}\n\nexport default MyApp\n"]},"metadata":{},"sourceType":"module"}