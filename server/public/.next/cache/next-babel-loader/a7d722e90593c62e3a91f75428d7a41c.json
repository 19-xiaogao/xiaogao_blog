{"ast":null,"code":"import http from '../util/request';\n// 查找博客列表\nexport const getIndexPageData = params => http.get('/api/web/list_blog', {\n  params\n}); // 查找博客详情\n\nexport const getBlogDetail = params => http.get('/api/web/blog_detail', {\n  params\n});\n// 喜欢博客 和查看博客\nexport const goodLikeBlog = data => http.post('/api/web/blog_goodLike', data);\n// 获取博客 按年份分类\nexport const blogCategorize = params => http.get('/api/web/blog_categorize', {\n  params\n});\n// 邮箱订阅\nexport const subscribe_email = params => http.post('/api/web/subscribe_email', params);\n// 邮箱验证\nexport const subscribe_verify = params => http.post('/api/web/subscribe_verify', params);\n//创建博客\nexport const blog_createComment = params => http.post('/api/web/blog_createComment', params); // 获取博客评论\n\nexport const get_blogComment = params => http.get('/api/web/blog_comment', {\n  params\n});","map":{"version":3,"sources":["/Users/longjiuwei/html,css,js/xiaogao_blog/web/api/api.ts"],"names":["http","getIndexPageData","params","get","getBlogDetail","goodLikeBlog","data","post","blogCategorize","subscribe_email","subscribe_verify","blog_createComment","get_blogComment"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,iBAAjB;AAWA;AACA,OAAO,MAAMC,gBAAgB,GAAIC,MAAD,IAAkCF,IAAI,CAACG,GAAL,CAAS,oBAAT,EAA+B;AAAED,EAAAA;AAAF,CAA/B,CAA3D,C,CAEP;;AACA,OAAO,MAAME,aAAa,GAAIF,MAAD,IAAsCF,IAAI,CAACG,GAAL,CAAS,sBAAT,EAAiC;AAAED,EAAAA;AAAF,CAAjC,CAA5D;AASP;AACA,OAAO,MAAMG,YAAY,GAAIC,IAAD,IAA+BN,IAAI,CAACO,IAAL,CAAU,wBAAV,EAAoCD,IAApC,CAApD;AAMP;AACA,OAAO,MAAME,cAAc,GAAIN,MAAD,IAAuCF,IAAI,CAACG,GAAL,CAAS,0BAAT,EAAqC;AAAED,EAAAA;AAAF,CAArC,CAA9D;AAOP;AACA,OAAO,MAAMO,eAAe,GAAIP,MAAD,IAA+BF,IAAI,CAACO,IAAL,CAAU,0BAAV,EAAsCL,MAAtC,CAAvD;AAQP;AACA,OAAO,MAAMQ,gBAAgB,GAAIR,MAAD,IAA+BF,IAAI,CAACO,IAAL,CAAU,2BAAV,EAAuCL,MAAvC,CAAxD;AASP;AACA,OAAO,MAAMS,kBAAkB,GAAIT,MAAD,IAAsCF,IAAI,CAACO,IAAL,CAAU,6BAAV,EAAyCL,MAAzC,CAAjE,C,CAEP;;AAMA,OAAO,MAAMU,eAAe,GAAIV,MAAD,IAAgCF,IAAI,CAACG,GAAL,CAAS,uBAAT,EAAkC;AAAED,EAAAA;AAAF,CAAlC,CAAxD","sourcesContent":["import http from '../util/request'\nimport { IResponse } from '../types/response'\n\ntype Response = Promise<IResponse>\n\ninterface IPageDate {\n    title?: string;\n    pageNo: number | string;\n    pageSize: number | string;\n}\n\n// 查找博客列表\nexport const getIndexPageData = (params?: IPageDate): Response => http.get('/api/web/list_blog', { params })\n\n// 查找博客详情\nexport const getBlogDetail = (params: { id: number }): Response => http.get('/api/web/blog_detail', { params })\n\n\n\ninterface IGoodLike {\n    id: number\n    like: boolean\n}\n\n// 喜欢博客 和查看博客\nexport const goodLikeBlog = (data: IGoodLike): Response => http.post('/api/web/blog_goodLike', data)\n\ninterface IBlogCategorize {\n    pageNo: number\n    pageSize: number\n}\n// 获取博客 按年份分类\nexport const blogCategorize = (params: IBlogCategorize): Response => http.get('/api/web/blog_categorize', { params });\n\n\ninterface ISEmail {\n    type: number\n    email: string\n}\n// 邮箱订阅\nexport const subscribe_email = (params: ISEmail): Response => http.post('/api/web/subscribe_email', params)\n\n\ninterface IVerify {\n    VerificationCode: string\n    email: string\n    id: string\n}\n// 邮箱验证\nexport const subscribe_verify = (params: IVerify): Response => http.post('/api/web/subscribe_verify', params)\n\ninterface ICreateComment {\n    articleId: number\n    commentName: string\n    commentEmail: string\n    createTime: string\n    context: string\n}\n//创建博客\nexport const blog_createComment = (params: ICreateComment): Response => http.post('/api/web/blog_createComment', params)\n\n// 获取博客评论\ninterface IComment {\n    pageNo: number\n    pageSize: number\n    id: number\n}\nexport const get_blogComment = (params: IComment): Response => http.get('/api/web/blog_comment', { params })\n\n"]},"metadata":{},"sourceType":"module"}