{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from 'react';\nimport moment from 'moment';\nimport Header from './components/Header';\nimport { useRouter } from 'next/router';\nimport Styles from '../styles/Article/index.module.scss';\nimport { blogCategorize } from '../api/api';\nimport { headerType } from '../types/response';\nimport { mouthEN } from '../util/mouthEN';\nlet pageSize = 10;\n\nconst Article = props => {\n  const {\n    0: blogList,\n    1: setBlogList\n  } = useState(props.blogAll);\n  const {\n    0: bottomChar,\n    1: setBottomChar\n  } = useState(false);\n  const router = useRouter();\n  useEffect(() => {\n    // 判断是否出现滚动条\n    const hasScrollbar = () => document.body.scrollHeight > (window.innerHeight || document.documentElement.clientHeight); // 计算分类后数据的总长度\n\n\n    const disposeArrLength = arr => arr.reduce((i, j) => i.data.length + j.data.length);\n\n    setBottomChar(hasScrollbar());\n\n    const moveBottom = async e => {\n      if (props.total === disposeArrLength(blogList)) {\n        return setBottomChar(true);\n      }\n\n      const scrollTop = document.documentElement.scrollTop || document.body.scrollTop;\n      const windowHeight = document.documentElement.clientHeight || document.body.clientHeight;\n      const scrollHeight = document.documentElement.scrollHeight || document.body.scrollHeight;\n\n      if (scrollTop + windowHeight == scrollHeight) {\n        pageSize = pageSize + 5;\n        const {\n          data,\n          success\n        } = await blogCategorize({\n          pageNo: 0,\n          pageSize: pageSize\n        });\n        if (!success) return;\n        setBlogList(disposeBlogFiled(data.list));\n\n        if (props.total === data.list.length) {\n          return setBottomChar(true);\n        }\n      }\n    };\n\n    window.addEventListener('scroll', moveBottom, false);\n    return () => window.removeEventListener('scroll', moveBottom, false);\n  }, []);\n\n  const jumpPage = id => {\n    router.push(`/${id}`);\n  };\n\n  const renderMonth = blog => blog.map((item, index) => /*#__PURE__*/_jsx(\"div\", {\n    className: Styles.year_list,\n    children: /*#__PURE__*/_jsxs(\"ul\", {\n      className: Styles.month_list,\n      children: [/*#__PURE__*/_jsx(\"li\", {\n        className: Styles.month,\n        children: item.month\n      }), /*#__PURE__*/_jsx(\"ul\", {\n        className: Styles.day,\n        children: renderListBlog(item.data)\n      })]\n    })\n  }, index + '1'));\n\n  const renderListBlog = blog => blog.map(item => /*#__PURE__*/_jsxs(\"li\", {\n    className: Styles.day_detail,\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      className: Styles.img,\n      children: /*#__PURE__*/_jsx(\"img\", {\n        src: item.imgUrl,\n        alt: \"\",\n        onClick: () => jumpPage(item.id)\n      })\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: Styles.char,\n      children: [/*#__PURE__*/_jsx(\"h3\", {\n        onClick: () => jumpPage(item.id),\n        children: item.title\n      }), /*#__PURE__*/_jsxs(\"span\", {\n        children: [item.likeCount, \" LIKE / \", item.viewCount, \" READ\"]\n      })]\n    }), /*#__PURE__*/_jsxs(\"span\", {\n      className: Styles.item_r,\n      children: [item.day, \"Day\"]\n    })]\n  }, item.id));\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: Styles.page,\n    children: [/*#__PURE__*/_jsx(Header, {\n      type: headerType.blog_detail\n    }), /*#__PURE__*/_jsxs(\"section\", {\n      className: Styles.home,\n      children: [renderMonth(blogList), bottomChar ? /*#__PURE__*/_jsx(\"div\", {\n        className: Styles.bottom,\n        children: \"\\u545C\\u545C,\\u5DF2\\u7ECF\\u88AB\\u638F\\u7A7A\\u4E86\"\n      }) : null]\n    })]\n  });\n};\n\nexport default Article;\n\nconst disposeBlogFiled = list => {\n  const mapAddMouth = list.map(item => _objectSpread(_objectSpread({}, item), {}, {\n    day: moment(item.createDate).format('DD'),\n    createDate: moment(item.createDate).format('YYYY-MM-DD'),\n    month: moment(item.createDate).format('YYYY-MM')\n  }));\n  const classify = mapAddMouth.reduce((last, item) => {\n    if (last[item.month]) {\n      last[item.month].push(item);\n    } else {\n      last[item.month] = [item];\n    }\n\n    return last;\n  }, {});\n  const arr = [];\n\n  for (const iterator in classify) {\n    let fistChar = iterator.split('-')[0];\n    let lastChar = Number(iterator.split('-')[1]);\n    arr.push({\n      month: mouthEN[lastChar] + ',' + fistChar,\n      data: classify[iterator]\n    });\n  }\n\n  return arr;\n};\n\nexport const getStaticProps = async () => {\n  const {\n    data,\n    success\n  } = await blogCategorize({\n    pageNo: 1,\n    pageSize: pageSize\n  });\n  if (!success) return;\n  return {\n    props: {\n      blogAll: disposeBlogFiled(data.list),\n      total: data.total\n    }\n  };\n};","map":null,"metadata":{},"sourceType":"module"}