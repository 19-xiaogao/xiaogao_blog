{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/longjiuwei/html,css,js/xiaogao_blog/web/pages/article.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from 'react';\nimport moment from 'moment';\nimport Header from '../components/Header';\nimport { useRouter } from 'next/router';\nimport Styles from '../styles/Article/index.module.scss';\nimport { blogCategorize } from '../api/api';\nimport { headerType } from '../types/response';\nimport { mouthEN } from '../util/mouthEN';\nlet pageSize = 10;\n\nconst Article = props => {\n  const {\n    0: blogList,\n    1: setBlogList\n  } = useState(props.blogAll);\n  const {\n    0: bottomChar,\n    1: setBottomChar\n  } = useState(false);\n  const router = useRouter();\n  useEffect(() => {\n    // 判断是否出现滚动条\n    const hasScrollbar = () => document.body.scrollHeight > (window.innerHeight || document.documentElement.clientHeight); // 计算分类后数据的总长度\n\n\n    const disposeArrLength = arr => arr.reduce((i, j) => i.data.length + j.data.length);\n\n    setBottomChar(hasScrollbar());\n\n    const moveBottom = async e => {\n      if (props.total === disposeArrLength(blogList)) {\n        return setBottomChar(true);\n      }\n\n      const scrollTop = document.documentElement.scrollTop || document.body.scrollTop;\n      const windowHeight = document.documentElement.clientHeight || document.body.clientHeight;\n      const scrollHeight = document.documentElement.scrollHeight || document.body.scrollHeight;\n\n      if (scrollTop + windowHeight == scrollHeight) {\n        pageSize = pageSize + 5;\n        const {\n          data,\n          success\n        } = await blogCategorize({\n          pageNo: 0,\n          pageSize: pageSize\n        });\n        if (!success) return;\n        setBlogList(disposeBlogFiled(data.list));\n\n        if (props.total === data.list.length) {\n          return setBottomChar(true);\n        }\n      }\n    };\n\n    window.addEventListener('scroll', moveBottom, false);\n    return () => window.removeEventListener('scroll', moveBottom, false);\n  }, []);\n\n  const jumpPage = id => {\n    router.push(`/${id}`);\n  };\n\n  const renderMonth = blog => blog.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: Styles.year_list,\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: Styles.month_list,\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        className: Styles.month,\n        children: item.month\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: Styles.day,\n        children: renderListBlog(item.data)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)\n  }, index + '1', false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 36\n  }, this));\n\n  const renderListBlog = blog => blog.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n    className: Styles.day_detail,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: Styles.img,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: item.imgUrl,\n        alt: \"\",\n        onClick: () => jumpPage(item.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: Styles.char,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        onClick: () => jumpPage(item.id),\n        children: item.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [item.likeCount, \" LIKE / \", item.viewCount, \" READ\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: Styles.item_r,\n      children: [item.day, \"Day\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, item.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 27\n  }, this));\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: Styles.page,\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      type: headerType.blog_detail\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: Styles.home,\n      children: [renderMonth(blogList), bottomChar ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: Styles.bottom,\n        children: \"\\u545C\\u545C,\\u5DF2\\u7ECF\\u88AB\\u638F\\u7A7A\\u4E86\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 27\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 12\n  }, this);\n};\n\nexport default Article;\n\nconst disposeBlogFiled = list => {\n  const mapAddMouth = list.map(item => _objectSpread(_objectSpread({}, item), {}, {\n    day: moment(item.createDate).format('DD'),\n    createDate: moment(item.createDate).format('YYYY-MM-DD'),\n    month: moment(item.createDate).format('YYYY-MM')\n  }));\n  const classify = mapAddMouth.reduce((last, item) => {\n    if (last[item.month]) {\n      last[item.month].push(item);\n    } else {\n      last[item.month] = [item];\n    }\n\n    return last;\n  }, {});\n  const arr = [];\n\n  for (const iterator in classify) {\n    let fistChar = iterator.split('-')[0];\n    let lastChar = Number(iterator.split('-')[1]);\n    arr.push({\n      month: mouthEN[lastChar] + ',' + fistChar,\n      data: classify[iterator]\n    });\n  }\n\n  return arr;\n};\n\nexport const getStaticProps = async () => {\n  const {\n    data,\n    success\n  } = await blogCategorize({\n    pageNo: 1,\n    pageSize: pageSize\n  });\n  if (!success) return;\n  return {\n    props: {\n      blogAll: disposeBlogFiled(data.list),\n      total: data.total\n    }\n  };\n};","map":{"version":3,"sources":["/Users/longjiuwei/html,css,js/xiaogao_blog/web/pages/article.tsx"],"names":["React","useState","useEffect","moment","Header","useRouter","Styles","blogCategorize","headerType","mouthEN","pageSize","Article","props","blogList","setBlogList","blogAll","bottomChar","setBottomChar","router","hasScrollbar","document","body","scrollHeight","window","innerHeight","documentElement","clientHeight","disposeArrLength","arr","reduce","i","j","data","length","moveBottom","e","total","scrollTop","windowHeight","success","pageNo","disposeBlogFiled","list","addEventListener","removeEventListener","jumpPage","id","push","renderMonth","blog","map","item","index","year_list","month_list","month","day","renderListBlog","day_detail","img","imgUrl","char","title","likeCount","viewCount","item_r","page","blog_detail","home","bottom","mapAddMouth","createDate","format","classify","last","iterator","fistChar","split","lastChar","Number","getStaticProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport moment from 'moment'\nimport { GetStaticProps } from 'next'\nimport Header from '../components/Header'\nimport { useRouter } from 'next/router'\nimport Styles from '../styles/Article/index.module.scss'\nimport { blogCategorize } from '../api/api'\nimport { IBlogList, headerType } from '../types/response'\nimport { mouthEN } from '../util/mouthEN'\ninterface IArticleList {\n    month: string,\n    data: IBlogList[]\n}\ninterface IArticle {\n    blogAll: [IArticleList],\n    total: number\n}\n\nlet pageSize = 10;\nconst Article: React.FC<IArticle> = (props) => {\n\n    const [blogList, setBlogList] = useState<[IArticleList]>(props.blogAll)\n\n    const [bottomChar, setBottomChar] = useState<boolean>(false)\n\n\n    const router = useRouter()\n\n    useEffect(() => {\n        // 判断是否出现滚动条\n        const hasScrollbar = () => document.body.scrollHeight > (window.innerHeight || document.documentElement.clientHeight);\n\n        // 计算分类后数据的总长度\n        const disposeArrLength = (arr) => arr.reduce((i, j) => i.data.length + j.data.length)\n\n        setBottomChar(hasScrollbar())\n\n        const moveBottom = async (e) => {\n\n            if (props.total === disposeArrLength(blogList)) {\n                return setBottomChar(true)\n            }\n            const scrollTop = document.documentElement.scrollTop || document.body.scrollTop;\n\n            const windowHeight = document.documentElement.clientHeight || document.body.clientHeight;\n\n            const scrollHeight = document.documentElement.scrollHeight || document.body.scrollHeight;\n\n            if (scrollTop + windowHeight == scrollHeight) {\n\n                pageSize = pageSize + 5\n                const { data, success }: IBlogCategorize = await blogCategorize({ pageNo: 0, pageSize: pageSize })\n\n                if (!success) return\n\n\n                setBlogList(disposeBlogFiled(data.list))\n\n                if (props.total === data.list.length) {\n                    return setBottomChar(true)\n                }\n            }\n        }\n        window.addEventListener('scroll', moveBottom, false)\n        return () => window.removeEventListener('scroll', moveBottom, false)\n    }, [])\n\n    const jumpPage = (id: number) => {\n        router.push(`/${id}`)\n    }\n\n    const renderMonth = (blog: [IArticleList]) =>\n\n        blog.map((item, index) => (<div className={Styles.year_list} key={index + '1'}>\n\n            <ul className={Styles.month_list}>\n\n                <li className={Styles.month}>{item.month}</li>\n\n                <ul className={Styles.day}>\n                    {renderListBlog(item.data)}\n                </ul>\n            </ul>\n\n        </div>))\n\n    const renderListBlog = (blog: IBlogList[]) =>\n        blog.map(item => (<li className={Styles.day_detail} key={item.id}>\n\n            <div className={Styles.img}>\n                <img src={item.imgUrl} alt=\"\" onClick={() => jumpPage(item.id)} />\n            </div>\n\n            <div className={Styles.char}>\n                <h3 onClick={() => jumpPage(item.id)}>{item.title}</h3>\n                <span>{item.likeCount} LIKE / {item.viewCount} READ</span>\n            </div>\n\n            <span className={Styles.item_r}>{item.day}Day</span>\n        </li>))\n\n\n    return <div className={Styles.page}>\n\n        <Header type={headerType.blog_detail} />\n\n        <section className={Styles.home}>\n\n            {renderMonth(blogList)}\n            {bottomChar ? <div className={Styles.bottom} >呜呜,已经被掏空了</div> : null}\n\n        </section>\n    </div>\n}\nexport default Article\n\nconst disposeBlogFiled = (list: IBlogList[]): [IArticleList] => {\n\n    const mapAddMouth = list.map(item =>\n    ({\n        ...item,\n        day: moment(item.createDate).format('DD'),\n        createDate: moment(item.createDate).format('YYYY-MM-DD'),\n        month: moment(item.createDate).format('YYYY-MM')\n    }))\n\n    const classify = mapAddMouth.reduce((last, item) => {\n        if (last[item.month]) {\n            last[item.month].push(item)\n        } else {\n            last[item.month] = [item]\n        }\n        return last\n    }, {})\n\n\n    const arr: any = []\n\n    for (const iterator in classify) {\n        let fistChar = iterator.split('-')[0];\n        let lastChar = Number(iterator.split('-')[1])\n        arr.push({ month: mouthEN[lastChar] + ',' + fistChar, data: classify[iterator] })\n    }\n\n    return arr\n}\n\ninterface IBlogCategorize {\n    data: {\n        total: number\n        list: IBlogList[]\n    }\n    success: boolean\n}\n\nexport const getStaticProps: GetStaticProps = async () => {\n\n    const { data, success }: IBlogCategorize = await blogCategorize({ pageNo: 1, pageSize: pageSize })\n\n    if (!success) return\n\n    return {\n        props: {\n            blogAll: disposeBlogFiled(data.list),\n            total: data.total\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}